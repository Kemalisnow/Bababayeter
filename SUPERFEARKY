-- Ultimate Waypoint System - Cleaned full version
-- Single-file script with GUI, Waypoints, ESP, Local Player sliders
-- Panel toggle: P
-- Save this as a .txt or .lua and run in a LocalScript (Roblox) under StarterPlayerScripts or a compatible executor.

--// SERVICES
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Workspace = workspace

--// SHORTCUTS
local LP = Players.LocalPlayer
local character = LP.Character or LP.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local hum = character:WaitForChild("Humanoid")
local cam = Workspace.CurrentCamera

--// DATA
local waypoints = {}
local waypointOrder = {}
local currentWaypointIndex = 0

--// SETTINGS
local FLY_HEIGHT_OFFSET = 7
local settings = {
	-- Movement
	TweenSpeed = 30,

	-- ESP master
	ESPEnabled = false,

	-- ESP feature toggles
	ESP_Name = true,
	ESP_Box = true,
	ESP_Distance = true,
	ESP_Health = true,
	ESP_UseTeamColor = false,

	-- ESP visuals
	ESP_Color = Color3.fromRGB(255, 80, 80),
	ESP_MaxDistance = 2000,
	ESP_BoxSize = Vector3.new(4, 6, 1),
	ESP_FontSize = 18,
}

-- Local Player defaults and current
local lpDefaults = { WalkSpeed = 16, JumpPower = 50, FieldOfView = 70, Gravity = 196.2 }
local lpCurrent = { WalkSpeed = lpDefaults.WalkSpeed, JumpPower = lpDefaults.JumpPower, FieldOfView = lpDefaults.FieldOfView, Gravity = lpDefaults.Gravity }

-- ESP store
local espPerPlayer = {}

--// UI Helpers (rounded boxes, buttons, etc.)
local function newCorner(parent, radius) local c = Instance.new("UICorner"); c.CornerRadius = UDim.new(0, radius or 10); c.Parent = parent; return c end
local function newLabel(parent, text, props)
	local l = Instance.new("TextLabel")
	l.BackgroundTransparency = props.backgroundTrans or 1
	l.Size = props.size or UDim2.new(1,0,0,20)
	l.Position = props.pos or UDim2.new(0,0,0,0)
	l.Font = props.font or Enum.Font.Gotham
	l.TextSize = props.textSize or 16
	l.TextXAlignment = props.align or Enum.TextXAlignment.Left
	l.TextColor3 = props.color or Color3.new(1,1,1)
	l.Text = text or ""
	l.Parent = parent
	return l
end
local function newTextBox(parent, size, pos)
	local tb = Instance.new("TextBox")
	tb.Size = size; tb.Position = pos
	tb.BackgroundColor3 = Color3.fromRGB(35,35,35)
	tb.BorderSizePixel = 0
	tb.Text = ""
	tb.TextColor3 = Color3.new(1,1,1)
	tb.Font = Enum.Font.Gotham
	tb.TextSize = 18
	tb.Parent = parent
	newCorner(tb, 8)
	return tb
end
local function newButton(parent, size, pos, txt, bg)
	local b = Instance.new("TextButton")
	b.Size = size; b.Position = pos
	b.BackgroundColor3 = bg or Color3.fromRGB(0,170,255)
	b.BorderSizePixel = 0; b.Text = txt or ""
	b.TextColor3 = Color3.new(1,1,1); b.Font = Enum.Font.GothamBold; b.TextSize = 18
	b.Parent = parent; newCorner(b, 8); return b
end

local function makeSlider(parent, labelText, minV, maxV, defaultV, posY, onChange)
	local row = Instance.new("Frame"); row.Size = UDim2.new(1,0,0,56); row.Position = UDim2.new(0,0,0,posY); row.BackgroundTransparency = 1; row.Parent = parent
	newLabel(row, labelText, {pos = UDim2.new(0,8,0,6), size = UDim2.new(0.6,0,0,20), font=Enum.Font.GothamBold, textSize=16})
	local valBox = newTextBox(row, UDim2.new(0,88,0,30), UDim2.new(1,-96,0,14)); valBox.ClearTextOnFocus = false; valBox.Text = tostring(defaultV)
	local track = Instance.new("Frame"); track.Size = UDim2.new(0.86,0,0,8); track.Position = UDim2.new(0,8,0,36); track.BackgroundColor3 = Color3.fromRGB(55,55,55); track.BorderSizePixel = 0; track.Parent = row; newCorner(track, 6)
	local fill = Instance.new("Frame"); fill.Size = UDim2.new((defaultV-minV)/(maxV-minV),0,1,0); fill.BackgroundColor3 = Color3.fromRGB(0,170,255); fill.BorderSizePixel=0; fill.Parent = track; newCorner(fill,6)
	local knob = Instance.new("Frame"); knob.Size = UDim2.new(0,16,0,16); knob.Position = UDim2.new(fill.Size.X.Scale, -8, 0.5, -8); knob.BackgroundColor3 = Color3.fromRGB(220,220,220); knob.BorderSizePixel=0; knob.Parent = track; newCorner(knob,8)
	local dragging = false
	local function setFromX(px)
		local rel = math.clamp((px - track.AbsolutePosition.X) / track.AbsoluteSize.X, 0, 1)
		local val = minV + rel*(maxV-minV)
		if maxV-minV <= 10 then val = math.floor(val+0.5) else val = math.floor(val*10+0.5)/10 end
		local s = (val-minV)/(maxV-minV)
		fill.Size = UDim2.new(s,0,1,0)
		knob.Position = UDim2.new(s, -8, 0.5, -8)
		valBox.Text = tostring(val)
		if onChange then onChange(val) end
	end
	knob.InputBegan:Connect(function(i) if i.UserInputType == Enum.UserInputType.MouseButton1 then dragging = true end end)
	UserInputService.InputEnded:Connect(function(i) if i.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end end)
	UserInputService.InputChanged:Connect(function(i) if dragging and i.UserInputType == Enum.UserInputType.MouseMovement then setFromX(i.Position.X) end end)
	valBox.FocusLost:Connect(function() local v = tonumber(valBox.Text); if v then v = math.clamp(v,minV,maxV); setFromX(track.AbsolutePosition.X + (v-minV)/(maxV-minV)*track.AbsoluteSize.X) else valBox.Text = tostring(minV + fill.Size.X.Scale*(maxV-minV)) end end)
	return { Set = function(v) v = math.clamp(v,minV,maxV); local s = (v-minV)/(maxV-minV); fill.Size=UDim2.new(s,0,1,0); knob.Position=UDim2.new(s,-8,0.5,-8); valBox.Text=tostring(v); if onChange then onChange(v) end end }
end

--// BUILD UI (clean single panel)
local gui = Instance.new("ScreenGui"); gui.Name = "UltimateWaypointSystem"; gui.ResetOnSpawn = false; gui.Parent = LP:WaitForChild("PlayerGui")

local panel = Instance.new("Frame"); panel.Size = UDim2.new(0,720,0,520); panel.Position = UDim2.new(0.5,-360,0.5,-260); panel.BackgroundColor3 = Color3.fromRGB(24,24,24); panel.BorderSizePixel = 0; panel.Active = true; panel.Draggable = true; panel.Parent = gui; newCorner(panel,14)
local title = Instance.new("Frame"); title.Size = UDim2.new(1,0,0,48); title.Position = UDim2.new(0,0,0,0); title.BackgroundColor3 = Color3.fromRGB(12,12,12); title.BorderSizePixel = 0; title.Parent = panel; newCorner(title,14)
local titleLbl = newLabel(title, "Ultimate Waypoint Sistemi (0)", {pos = UDim2.new(0,14,0,8), size = UDim2.new(1,-140,1,0), textSize = 22, font = Enum.Font.GothamBold, color = Color3.fromRGB(0,170,255)})
local closeBtn = newButton(title, UDim2.new(0,80,0,32), UDim2.new(1,-96,0,8), "Kapat", Color3.fromRGB(255,70,70)); closeBtn.TextSize = 16

-- Left column (waypoints)
local left = Instance.new("Frame"); left.Size = UDim2.new(0,340,0,460); left.Position = UDim2.new(0,12,0,56); left.BackgroundTransparency = 1; left.Parent = panel
local nameBox = newTextBox(left, UDim2.new(0,320,0,40), UDim2.new(0,0,0,0))
local colorRow = Instance.new("Frame"); colorRow.Size = UDim2.new(0,320,0,36); colorRow.Position = UDim2.new(0,0,0,48); colorRow.BackgroundTransparency = 1; colorRow.Parent = left
newLabel(colorRow, "Renk:", {pos=UDim2.new(0,0,0,6), size=UDim2.new(0,60,0,24), font=Enum.Font.GothamBold, textSize=16})
local colorOptions = { Color3.fromRGB(0,170,255), Color3.fromRGB(255,60,60), Color3.fromRGB(60,255,60), Color3.fromRGB(255,255,60) }
local selectedColor = colorOptions[1]
for i,c in ipairs(colorOptions) do local b = Instance.new("TextButton"); b.Size = UDim2.new(0,28,0,28); b.Position = UDim2.new(0, 64 + (i-1)*36, 0, 4); b.BackgroundColor3 = c; b.BorderSizePixel = 1; b.Text=""; b.Parent = colorRow; newCorner(b,8); b.MouseButton1Click:Connect(function() selectedColor = c; for _,other in ipairs(colorRow:GetChildren()) do if other:IsA("TextButton") then other.BorderSizePixel = 1 end end; b.BorderSizePixel = 3 end) end

local createBtn = newButton(left, UDim2.new(0,320,0,40), UDim2.new(0,0,0,96), "Waypoint Oluştur", Color3.fromRGB(0,170,255))
local listFrame = Instance.new("ScrollingFrame"); listFrame.Size = UDim2.new(0,320,0,320); listFrame.Position = UDim2.new(0,0,0,148); listFrame.BackgroundTransparency = 1; listFrame.Parent = left
local grid = Instance.new("UIGridLayout"); grid.CellSize = UDim2.new(0,320,0,44); grid.CellPadding = UDim2.new(0,6,0,6); grid.Parent = listFrame

-- Right column (settings, esp, local player)
local right = Instance.new("Frame"); right.Size = UDim2.new(0,352,0,460); right.Position = UDim2.new(0,368,0,56); right.BackgroundTransparency = 1; right.Parent = panel

-- Tween speed
newLabel(right, "Tween Hızı", {pos=UDim2.new(0,8,0,0), size=UDim2.new(0,120,0,20), font=Enum.Font.GothamBold, textSize=16})
local speedBox = newTextBox(right, UDim2.new(0,100,0,36), UDim2.new(0,8,0,24)); speedBox.Text = tostring(settings.TweenSpeed)
speedBox.FocusLost:Connect(function() local v = tonumber(speedBox.Text); if v and v>0 then settings.TweenSpeed=v else speedBox.Text=tostring(settings.TweenSpeed) end end)

-- ESP card
local espCard = Instance.new("Frame"); espCard.Size = UDim2.new(1,0,0,220); espCard.Position = UDim2.new(0,0,0,72); espCard.BackgroundColor3 = Color3.fromRGB(26,26,26); espCard.BorderSizePixel = 0; espCard.Parent = right; newCorner(espCard,10)
newLabel(espCard, "ESP", {pos=UDim2.new(0,12,0,8), size=UDim2.new(0,120,0,20), font=Enum.Font.GothamBold, textSize=16})
local espToggle = newButton(espCard, UDim2.new(0,120,0,34), UDim2.new(0,12,0,36), "ESP: Kapalı", Color3.fromRGB(120,120,120))
local function setToggle(btn, state, onText, offText) if state then btn.Text=onText; btn.BackgroundColor3=Color3.fromRGB(60,200,90) else btn.Text=offText; btn.BackgroundColor3=Color3.fromRGB(120,120,120) end end
local nameT = newButton(espCard, UDim2.new(0,120,0,30), UDim2.new(0,12,0,78), "İsim: Açık", Color3.fromRGB(120,120,120))
local boxT  = newButton(espCard, UDim2.new(0,120,0,30), UDim2.new(0,184,0,78), "Kutu: Açık", Color3.fromRGB(120,120,120))
local distT = newButton(espCard, UDim2.new(0,120,0,30), UDim2.new(0,12,0,116), "Mesafe: Açık", Color3.fromRGB(120,120,120))
local hpT   = newButton(espCard, UDim2.new(0,120,0,30), UDim2.new(0,184,0,116), "HP: Açık", Color3.fromRGB(120,120,120))
espToggle.MouseButton1Click:Connect(function() settings.ESPEnabled = not settings.ESPEnabled; setToggle(espToggle, settings.ESPEnabled, "ESP: Açık", "ESP: Kapalı") if not settings.ESPEnabled then for p,pack in pairs(espPerPlayer) do if pack then if pack.adorns then for _,a in ipairs(pack.adorns) do if a and a.Parent then a:Destroy() end end end if pack.billboard and pack.billboard.Parent then pack.billboard:Destroy() end end end espPerPlayer = {} end end)
nameT.MouseButton1Click:Connect(function() settings.ESP_Name = not settings.ESP_Name; nameT.Text = settings.ESP_Name and "İsim: Açık" or "İsim: Kapalı" end)
boxT.MouseButton1Click:Connect(function() settings.ESP_Box = not settings.ESP_Box; boxT.Text = settings.ESP_Box and "Kutu: Açık" or "Kutu: Kapalı" end)
distT.MouseButton1Click:Connect(function() settings.ESP_Distance = not settings.ESP_Distance; distT.Text = settings.ESP_Distance and "Mesafe: Açık" or "Mesafe: Kapalı" end)
hpT.MouseButton1Click:Connect(function() settings.ESP_Health = not settings.ESP_Health; hpT.Text = settings.ESP_Health and "HP: Açık" or "HP: Kapalı" end)

-- ESP extra input fields
local maxBox = newTextBox(espCard, UDim2.new(0,100,0,30), UDim2.new(0,12,0,156)); maxBox.Text = tostring(settings.ESP_MaxDistance)
maxBox.FocusLost:Connect(function() local v=tonumber(maxBox.Text); if v and v>0 then settings.ESP_MaxDistance=v else maxBox.Text=tostring(settings.ESP_MaxDistance) end end)
local fontBox = newTextBox(espCard, UDim2.new(0,100,0,30), UDim2.new(0,124,0,156)); fontBox.Text = tostring(settings.ESP_FontSize)
fontBox.FocusLost:Connect(function() local v=tonumber(fontBox.Text); if v and v>=10 and v<=48 then settings.ESP_FontSize=v else fontBox.Text=tostring(settings.ESP_FontSize) end end)
local colorBtn = newButton(espCard, UDim2.new(0,100,0,30), UDim2.new(0,236,0,156), "Renk", settings.ESP_Color)
local colorOptions2 = { Color3.fromRGB(255,80,80), Color3.fromRGB(80,255,120), Color3.fromRGB(80,170,255), Color3.fromRGB(255,220,80) }
local colorIndex = 1
colorBtn.MouseButton1Click:Connect(function() colorIndex = (colorIndex % #colorOptions2) + 1; settings.ESP_Color = colorOptions2[colorIndex]; colorBtn.BackgroundColor3 = settings.ESP_Color end)

-- Local Player card (sliders)
local lpCard = Instance.new("Frame"); lpCard.Size = UDim2.new(1,0,0,200); lpCard.Position = UDim2.new(0,0,0,300); lpCard.BackgroundColor3 = Color3.fromRGB(26,26,26); lpCard.Parent = right; newCorner(lpCard,10)
newLabel(lpCard, "Local Player", {pos=UDim2.new(0,12,0,8), size=UDim2.new(0,200,0,20), font=Enum.Font.GothamBold, textSize=16})
local wsSlider = makeSlider(lpCard, "WalkSpeed", 5, 120, lpCurrent.WalkSpeed, 36, function(v) lpCurrent.WalkSpeed = v; if hum then hum.WalkSpeed = v end end)
local jpSlider = makeSlider(lpCard, "JumpPower", 10, 200, lpCurrent.JumpPower, 98, function(v) lpCurrent.JumpPower = v; if hum then hum.JumpPower = v end end)
local fovSlider = makeSlider(lpCard, "FOV", 50, 120, lpCurrent.FieldOfView, 160, function(v) lpCurrent.FieldOfView = v; if cam then cam.FieldOfView = v end end)

local resetBtn = newButton(lpCard, UDim2.new(0,120,0,34), UDim2.new(1,-136,1,-42), "Reset", Color3.fromRGB(255,120,80))
resetBtn.MouseButton1Click:Connect(function()
	lpCurrent = { WalkSpeed = lpDefaults.WalkSpeed, JumpPower = lpDefaults.JumpPower, FieldOfView = lpDefaults.FieldOfView, Gravity = lpDefaults.Gravity }
	wsSlider.Set(lpCurrent.WalkSpeed)
	jpSlider.Set(lpCurrent.JumpPower)
	fovSlider.Set(lpCurrent.FieldOfView)
	if hum then hum.WalkSpeed = lpCurrent.WalkSpeed; hum.JumpPower = lpCurrent.JumpPower end
	if cam then cam.FieldOfView = lpCurrent.FieldOfView end
	Workspace.Gravity = lpCurrent.Gravity
end)

-- Apply initial local player settings
if hum then hum.WalkSpeed = lpCurrent.WalkSpeed; hum.JumpPower = lpCurrent.JumpPower end
if cam then cam.FieldOfView = lpCurrent.FieldOfView end
Workspace.Gravity = lpCurrent.Gravity

-- Helper functions: update title, list canvas, create waypoint part, flyTo, rebuild rows
local function updateTitle() titleLbl.Text = ("Ultimate Waypoint Sistemi (%d)"):format(#waypointOrder) end
local function updateListCanvas() listFrame.CanvasSize = UDim2.new(0,0,0,grid.AbsoluteContentSize.Y + 8) end

local function createWaypointPart(name, pos, color)
	local part = Instance.new("Part")
	part.Size = Vector3.new(2,2,2); part.Shape = Enum.PartType.Ball; part.Material = Enum.Material.Neon
	part.Anchored = true; part.CanCollide = false; part.Color = color or Color3.fromRGB(0,170,255)
	part.CFrame = CFrame.new(pos); part.Name = name; part.Parent = Workspace
	local bb = Instance.new("BillboardGui"); bb.Adornee = part; bb.Size = UDim2.new(0,150,0,36); bb.StudsOffset = Vector3.new(0,3,0); bb.AlwaysOnTop = true; bb.Parent = part
	local lbl = Instance.new("TextLabel"); lbl.BackgroundTransparency = 0.5; lbl.BackgroundColor3 = Color3.fromRGB(0,0,0); lbl.BorderSizePixel = 0; lbl.Size = UDim2.new(1,0,1,0)
	lbl.Text = name; lbl.TextColor3 = Color3.new(1,1,1); lbl.Font = Enum.Font.GothamBold; lbl.TextSize = 16; lbl.Parent = bb
	return part
end

local function flyTo(targetPos)
	local ch = LP.Character; if not ch then return end
	local humanoid = ch:FindFirstChildOfClass("Humanoid"); local root = ch:FindFirstChild("HumanoidRootPart")
	if not humanoid or not root then return end
	humanoid.PlatformStand = true; root.CanCollide = false
	local startPos = root.Position + Vector3.new(0,5,0); root.CFrame = CFrame.new(startPos)
	local midPoint = Vector3.new(targetPos.X, targetPos.Y + FLY_HEIGHT_OFFSET, targetPos.Z)
	local upTime = (startPos - midPoint).Magnitude / settings.TweenSpeed
	local downTime = (midPoint - targetPos).Magnitude / settings.TweenSpeed
	local tweenUp = TweenService:Create(root, TweenInfo.new(upTime, Enum.EasingStyle.Sine), {CFrame = CFrame.new(midPoint)})
	tweenUp:Play(); tweenUp.Completed:Wait()
	local tweenDown = TweenService:Create(root, TweenInfo.new(downTime, Enum.EasingStyle.Sine), {CFrame = CFrame.new(targetPos)})
	tweenDown:Play(); tweenDown.Completed:Wait()
	humanoid.PlatformStand = false; root.CanCollide = true
end

local function rebuildWaypointButton(name)
	local data = waypoints[name]; if not data then return end
	local row = listFrame:FindFirstChild(name); if row then row:Destroy() end
	row = Instance.new("Frame"); row.Name = name; row.BackgroundColor3 = Color3.fromRGB(28,28,28); row.Size = UDim2.new(0,320,0,40); row.Parent = listFrame; newCorner(row,8)
	local lbl = newLabel(row, data.Name, {pos=UDim2.new(0,12,0,0), size=UDim2.new(0.6,0,1,0), font=Enum.Font.GothamBold, textSize=16}); lbl.TextColor3 = data.Color or Color3.fromRGB(0,170,255)
	local goBtn = newButton(row, UDim2.new(0,72,0,30), UDim2.new(1,-150,0.5,-15), "Git", Color3.fromRGB(0,170,255))
	local delBtn = newButton(row, UDim2.new(0,72,0,30), UDim2.new(1,-72,0.5,-15), "Sil", Color3.fromRGB(255,70,70))
	goBtn.MouseButton1Click:Connect(function() if data.Part and data.Part.Parent then flyTo(data.Part.Position) end end)
	delBtn.MouseButton1Click:Connect(function() if data.Part and data.Part.Parent then data.Part:Destroy() end; waypoints[name] = nil; for i,v in ipairs(waypointOrder) do if v==name then table.remove(waypointOrder,i); break end end; row:Destroy(); updateTitle(); updateListCanvas() end)
	updateListCanvas()
end

local function refreshList() for _,c in ipairs(listFrame:GetChildren()) do if c:IsA("Frame") then c:Destroy() end end; for _,nm in ipairs(waypointOrder) do if waypoints[nm] then rebuildWaypointButton(nm) end end; updateTitle(); updateListCanvas() end

createBtn.MouseButton1Click:Connect(function()
	local n = (nameBox.Text or ""):gsub("^%s*(.-)%s*$","%1")
	if n == "" then warn("Geçerli bir isim girin."); return end
	if waypoints[n] then warn("Bu isim zaten var."); return end
	local pos = (hrp and hrp.Position or Workspace.CurrentCamera.CFrame.Position) + (hrp and hrp.CFrame.LookVector or Workspace.CurrentCamera.CFrame.LookVector) * 10
	local part = createWaypointPart(n,pos,selectedColor)
	waypoints[n] = { Name = n, Part = part, Color = selectedColor }
	table.insert(waypointOrder, n)
	nameBox.Text = ""
	refreshList()
end)

-- Panel toggle (P)
UserInputService.InputBegan:Connect(function(input, processed)
	if processed then return end
	if input.KeyCode == Enum.KeyCode.P then panel.Visible = not panel.Visible end
	if panel.Visible then
		if input.KeyCode == Enum.KeyCode.Right then
			if #waypointOrder == 0 then return end
			currentWaypointIndex = (currentWaypointIndex % #waypointOrder) + 1
			local nm = waypointOrder[currentWaypointIndex]
			local wp = waypoints[nm]
			if wp and wp.Part then flyTo(wp.Part.Position) end
		elseif input.KeyCode == Enum.KeyCode.Left then
			if #waypointOrder == 0 then return end
			currentWaypointIndex = currentWaypointIndex - 1
			if currentWaypointIndex < 1 then currentWaypointIndex = #waypointOrder end
			local nm = waypointOrder[currentWaypointIndex]
			local wp = waypoints[nm]
			if wp and wp.Part then flyTo(wp.Part.Position) end
		end
	end
end)

closeBtn.MouseButton1Click:Connect(function() panel.Visible = false end)
LP.CharacterAdded:Connect(function(ch) character = ch; hum = ch:WaitForChild("Humanoid"); hrp = ch:WaitForChild("HumanoidRootPart"); task.defer(function() hum.WalkSpeed = lpCurrent.WalkSpeed; hum.JumpPower = lpCurrent.JumpPower; if cam then cam.FieldOfView = lpCurrent.FieldOfView end; Workspace.Gravity = lpCurrent.Gravity end) end)

-- ESP functions
local function clearESPFor(plr)
	local pack = espPerPlayer[plr]
	if pack then
		if pack.adorns then for _,a in ipairs(pack.adorns) do if a and a.Parent then a:Destroy() end end end
		if pack.billboard and pack.billboard.Parent then pack.billboard:Destroy() end
	end
	espPerPlayer[plr] = nil
end

local function ensureESPFor(plr)
	if not settings.ESPEnabled or plr == LP then return end
	local ch = plr.Character; if not ch then return end
	local thrp = ch:FindFirstChild("HumanoidRootPart"); if not thrp then return end
	local pack = espPerPlayer[plr]; if not pack then pack = {adorns={}}; espPerPlayer[plr]=pack end
	-- Box
	if settings.ESP_Box then
		if not pack.box then
			local box = Instance.new("BoxHandleAdornment"); box.Adornee = thrp; box.Size = settings.ESP_BoxSize; box.AlwaysOnTop = true; box.Transparency = 0.5
			box.Color3 = settings.ESP_UseTeamColor and (plr.Team and plr.Team.TeamColor.Color or settings.ESP_Color) or settings.ESP_Color
			box.Parent = thrp; pack.box = box; table.insert(pack.adorns, box)
		else
			pack.box.Size = settings.ESP_BoxSize
			pack.box.Color3 = settings.ESP_UseTeamColor and (plr.Team and plr.Team.TeamColor.Color or settings.ESP_Color) or settings.ESP_Color
		end
	else
		if pack.box then pack.box:Destroy(); pack.box = nil end
	end
	-- Billboard
	if settings.ESP_Name or settings.ESP_Distance or settings.ESP_Health then
		if not pack.billboard then
			local bb = Instance.new("BillboardGui"); bb.Adornee = thrp; bb.Size = UDim2.new(0,220,0,60); bb.StudsOffset = Vector3.new(0,3.2,0); bb.AlwaysOnTop = true; bb.Parent = thrp
			local nameLbl = Instance.new("TextLabel"); nameLbl.BackgroundTransparency = 1; nameLbl.Size = UDim2.new(1,0,0,28); nameLbl.Position = UDim2.new(0,0,0,0)
			nameLbl.Font = Enum.Font.GothamBold; nameLbl.TextSize = settings.ESP_FontSize; nameLbl.TextColor3 = Color3.new(1,1,1); nameLbl.Text = ""; nameLbl.Parent = bb
			local hpBack = Instance.new("Frame"); hpBack.BackgroundColor3 = Color3.fromRGB(30,30,30); hpBack.Size = UDim2.new(1,0,0,16); hpBack.Position = UDim2.new(0,0,1,-18); hpBack.Parent = bb; newCorner(hpBack,6)
			local hpFill = Instance.new("Frame"); hpFill.BackgroundColor3 = Color3.fromRGB(60,220,100); hpFill.Size = UDim2.new(0,0,1,0); hpFill.Parent = hpBack; newCorner(hpFill,6)
			pack.billboard = bb; pack.nameLbl = nameLbl; pack.hpBack = hpBack; pack.hpFill = hpFill
		end
		pack.nameLbl.TextSize = settings.ESP_FontSize
		pack.nameLbl.TextColor3 = settings.ESP_UseTeamColor and ((plr.Team and plr.Team.TeamColor.Color) or Color3.new(1,1,1)) or Color3.new(1,1,1)
		pack.hpBack.Visible = settings.ESP_Health
		-- text
		local txts = {}
		if settings.ESP_Name then table.insert(txts, plr.Name) end
		if settings.ESP_Distance then
			if hrp and hrp.Parent then
				local dist = math.floor((thrp.Position - hrp.Position).Magnitude)
				table.insert(txts, "["..tostring(dist).."m]")
			end
		end
		pack.nameLbl.Text = table.concat(txts, "  •  ")
		-- hp
		if settings.ESP_Health then
			local hum2 = ch:FindFirstChildOfClass("Humanoid")
			if hum2 and hum2.MaxHealth>0 then local ratio = math.clamp(hum2.Health/hum2.MaxHealth,0,1); pack.hpFill.Size = UDim2.new(ratio,0,1,0); local g=math.floor(60+160*ratio); local r=math.floor(220-160*ratio); pack.hpFill.BackgroundColor3 = Color3.fromRGB(r,g,80) end
		end
	else
		if pack.billboard then pack.billboard:Destroy(); pack.billboard=nil end
	end
end

Players.PlayerAdded:Connect(function(plr) plr.CharacterAdded:Connect(function() task.wait(0.4); if settings.ESPEnabled then ensureESPFor(plr) end end) end)
Players.PlayerRemoving:Connect(function(plr) clearESPFor(plr) end)

RunService.RenderStepped:Connect(function()
	if not settings.ESPEnabled then return end
	if not hrp or not hrp.Parent then return end
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= LP then
			local ch = plr.Character
			if ch and ch:FindFirstChild("HumanoidRootPart") then
				local otherHRP = ch.HumanoidRootPart
				local dist = (otherHRP.Position - hrp.Position).Magnitude
				if dist <= settings.ESP_MaxDistance then ensureESPFor(plr); local pack = espPerPlayer[plr]; if pack and pack.box then pack.box.Visible = settings.ESP_Box; pack.box.Color3 = settings.ESP_UseTeamColor and (plr.Team and plr.Team.TeamColor.Color or settings.ESP_Color) or settings.ESP_Color end; if pack and pack.billboard then pack.billboard.Enabled = (settings.ESP_Name or settings.ESP_Distance or settings.ESP_Health) end else local pack=espPerPlayer[plr]; if pack then if pack.box then pack.box.Visible=false end; if pack.billboard then pack.billboard.Enabled=false end end end
			else clearESPFor(plr) end
		end
	end
end)

-- Init state
panel.Visible = false
print("Ultimate Waypoint Sistemi yüklendi. Paneli aç/kapat için 'P' tuşuna basınız.")
